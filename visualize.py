import json
import matplotlib.pyplot as plt
import pandas as pd
import os

# ==== Bước 1: Đọc file log (JSON Lines) ====
log_cross = "comparision/dataset2/with_crossvit/log.txt"   # thay bằng đường dẫn file txt của bạn
log_cross_deit = "comparision/dataset2/crossvit_deit/log.txt"

os.makedirs("comparision/dataset2/with_crossvit", exist_ok=True)
os.makedirs("comparision/dataset2/with_swin", exist_ok=True)
os.makedirs("comparision/dataset2/crossvit_deit", exist_ok=True)
os.makedirs("comparision/dataset2/all", exist_ok=True)


cross_records = []
with open(log_cross, "r") as f:
    for line in f:
        cross_records.append(json.loads(line.strip()))

cross_df = pd.DataFrame(cross_records)

cross_deit_records = []
with open(log_cross_deit, "r") as f:
    for line in f:
        cross_deit_records.append(json.loads(line.strip()))

cross_deit_df = pd.DataFrame(cross_deit_records)

swin_records = {"loss": [2.048577070236206, 1.378223180770874, 1.229670524597168, 1.1635924577713013, 1.1208772659301758, 1.0920181274414062, 1.064798355102539, 1.0476301908493042, 1.0318548679351807, 1.015478253364563, 1.0066888332366943, 0.9961151480674744, 0.9880072474479675, 0.9809184670448303, 0.981245219707489, 0.9720779657363892, 0.9631931781768799, 0.9611716866493225, 0.9540827870368958, 0.9515819549560547, 0.9494216442108154, 0.9467812180519104, 0.9426579475402832, 0.9433004260063171, 0.934168815612793, 0.933806836605072, 0.9334869980812073, 0.9301498532295227, 0.9289060831069946, 0.9201429486274719, 0.9261338710784912, 0.927533745765686, 0.9204149842262268, 0.9256377816200256, 0.9224405884742737, 0.9167258143424988, 0.9157420992851257, 0.9174384474754333, 0.9105506539344788, 0.9153146743774414],
"accuracy": [0.5567821264266968, 0.8011665344238281, 0.8565758466720581, 0.878810703754425, 0.8949142694473267, 0.903407096862793, 0.9126396179199219, 0.9177608489990234, 0.9224838018417358, 0.9274486303329468, 0.9299238920211792, 0.933067798614502, 0.9356568455696106, 0.9382601976394653, 0.9373781681060791, 0.9412333965301514, 0.9422860741615295, 0.9436375498771667, 0.9463119506835938, 0.9471228122711182, 0.9464399814605713, 0.947265088558197, 0.9494274258613586, 0.9489721655845642, 0.9513905644416809, 0.9503520727157593, 0.9525428414344788, 0.9531829953193665, 0.9533395171165466, 0.9566540718078613, 0.9532114863395691, 0.9536666870117188, 0.956028163433075, 0.9537520408630371, 0.9549328088760376, 0.9568959474563599, 0.9576357007026672, 0.9570239782333374, 0.9585461020469666, 0.9572942852973938],
"top-5-accuracy": [0.8363610506057739, 0.9716196060180664, 0.9841240644454956, 0.9877942800521851, 0.9899139404296875, 0.991706371307373, 0.9925314784049988, 0.9930862784385681, 0.9942812323570251, 0.9948502779006958, 0.9946511387825012, 0.9947506785392761, 0.9951774477958679, 0.9956753849983215, 0.9951490163803101, 0.9960025548934937, 0.9958887696266174, 0.9961875081062317, 0.9967707395553589, 0.9966000318527222, 0.9968419075012207, 0.9965716004371643, 0.997140645980835, 0.9968560934066772, 0.997211754322052, 0.9968560934066772, 0.9970979690551758, 0.997282862663269, 0.9970979690551758, 0.9971690773963928, 0.9971548318862915, 0.9973824620246887, 0.9973397850990295, 0.9972686767578125, 0.9973113536834717, 0.997681200504303, 0.9974962472915649, 0.9973540306091309, 0.997681200504303, 0.9979088306427002],
"top-1-accuracy": [0.5567821264266968, 0.8011665344238281, 0.8565758466720581, 0.878810703754425, 0.8949142694473267, 0.903407096862793, 0.9126396179199219, 0.9177608489990234, 0.9224838018417358, 0.9274486303329468, 0.9299238920211792, 0.933067798614502, 0.9356568455696106, 0.9382601976394653, 0.9373781681060791, 0.9412333965301514, 0.9422860741615295, 0.9436375498771667, 0.9463119506835938, 0.9471228122711182, 0.9464399814605713, 0.947265088558197, 0.9494274258613586, 0.9489721655845642, 0.9513905644416809, 0.9503520727157593, 0.9525428414344788, 0.9531829953193665, 0.9533395171165466, 0.9566540718078613, 0.9532114863395691, 0.9536666870117188, 0.956028163433075, 0.9537520408630371, 0.9549328088760376, 0.9568959474563599, 0.9576357007026672, 0.9570239782333374, 0.9585461020469666, 0.9572942852973938],
"val_loss": [1.5467451810836792, 1.290619969367981, 1.1755930185317993, 1.1276955604553223, 1.1399528980255127, 1.0842337608337402, 1.0586992502212524, 1.0342848300933838, 1.0381853580474854, 1.0511748790740967, 1.0145633220672607, 1.0770936012268066, 1.0084141492843628, 0.990196943283081, 0.9926525354385376, 0.9627516865730286, 1.0031284093856812, 0.9599167108535767, 0.9460322856903076, 0.9593800902366638, 0.9510442614555359, 0.9637097716331482, 0.9580470323562622, 0.966452956199646, 0.9352666735649109, 0.9517711997032166, 0.9470794200897217, 0.9317483901977539, 0.9211698174476624, 0.9480815529823303, 0.961917519569397, 0.9401645660400391, 0.9357957243919373, 0.9537206292152405, 0.9259204864501953, 0.901580810546875, 0.9283652305603027, 0.9325602650642395, 0.9126656651496887, 0.917625367641449],
"val_accuracy": [0.7366264462471008, 0.8349646925926208, 0.8751422762870789, 0.8954017758369446, 0.8816867470741272, 0.9059867858886719, 0.9127020239830017, 0.9218074083328247, 0.9158889055252075, 0.9123036861419678, 0.9260755777359009, 0.8987593650817871, 0.9268723130226135, 0.9351240396499634, 0.9335875511169434, 0.9424083828926086, 0.9245959520339966, 0.945538341999054, 0.9501479864120483, 0.9440017938613892, 0.9438310861587524, 0.9408149123191833, 0.9400182366371155, 0.9391076564788818, 0.9504324793815613, 0.9463919997215271, 0.9460505247116089, 0.9528796076774597, 0.954757571220398, 0.9426360130310059, 0.9420100450515747, 0.9484407305717468, 0.9470179677009583, 0.9430343508720398, 0.9518552422523499, 0.9629524350166321, 0.9517983198165894, 0.9520259499549866, 0.9589118957519531, 0.9570339322090149],
"val_top-5-accuracy": [0.9537332057952881, 0.9805372357368469, 0.9871386289596558, 0.9896995425224304, 0.9904393553733826, 0.9923742413520813, 0.9920327663421631, 0.9944798350334167, 0.99430912733078, 0.9936831593513489, 0.9946506023406982, 0.9903824329376221, 0.9949350953102112, 0.9962440133094788, 0.9955042004585266, 0.996585488319397, 0.9946506023406982, 0.9958456754684448, 0.9963578581809998, 0.9967561960220337, 0.9966992735862732, 0.9958456754684448, 0.9970976710319519, 0.9956749081611633, 0.9966992735862732, 0.9969269037246704, 0.9964147210121155, 0.9965285658836365, 0.9973253011703491, 0.9957887530326843, 0.9960163831710815, 0.9977236390113831, 0.9971545934677124, 0.9961870908737183, 0.9968131184577942, 0.9973822236061096, 0.9971545934677124, 0.9975529313087463, 0.9966992735862732, 0.9969838261604309],
"val_top-1-accuracy": [0.7366264462471008, 0.8349646925926208, 0.8751422762870789, 0.8954017758369446, 0.8816867470741272, 0.9059867858886719, 0.9127020239830017, 0.9218074083328247, 0.9158889055252075, 0.9123036861419678, 0.9260755777359009, 0.8987593650817871, 0.9268723130226135, 0.9351240396499634, 0.9335875511169434, 0.9424083828926086, 0.9245959520339966, 0.945538341999054, 0.9501479864120483, 0.9440017938613892, 0.9438310861587524, 0.9408149123191833, 0.9400182366371155, 0.9391076564788818, 0.9504324793815613, 0.9463919997215271, 0.9460505247116089, 0.9528796076774597, 0.954757571220398, 0.9426360130310059, 0.9420100450515747, 0.9484407305717468, 0.9470179677009583, 0.9430343508720398, 0.9518552422523499, 0.9629524350166321, 0.9517983198165894, 0.9520259499549866, 0.9589118957519531, 0.9570339322090149]}


swin_records["val_accuracy"] = [x * 100 for x in swin_records["val_accuracy"]]
# swin_records["val_top-5-accuracy"] = [x * 100 for x in swin_records["val_top-5-accuracy"]]
swin_records["val_top-1-accuracy"] = [x * 100 for x in swin_records["val_top-1-accuracy"]]

# ==== Bước 2: Thông tin cơ bản ====
# print(df.head())
print("\nTổng số epoch CrossViT:", len(cross_df))
print("\nTổng số epoch CrossViT_DeiT:", len(cross_deit_df))
print("\nTổng số epoch SWin:", len(swin_records["loss"]))

# ==== Bước 3: Vẽ biểu đồ ====
plt.figure(figsize=(15,10))
plt.plot(cross_deit_df["epoch"], cross_deit_df["train_loss"], label="Train Loss")
plt.plot(cross_deit_df["epoch"], cross_deit_df["test_loss"], label="Test Loss")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Train and Val Loss of CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/crossvit_deit/loss_plot.png")

plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], cross_df["train_loss"], label="CrossViT")
plt.plot(cross_deit_df["epoch"], cross_deit_df["train_loss"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Train Loss of CrossViT and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/with_crossvit/train_loss_plot.png")


plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], swin_records["loss"], label="Swin Transformer")
plt.plot(cross_deit_df["epoch"], cross_deit_df["train_loss"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Train Loss of Swin Transformer and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/with_swin/train_loss_plot.png")

plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], cross_df["test_loss"], label="CrossViT")
plt.plot(cross_deit_df["epoch"], cross_deit_df["test_loss"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Validation Loss of CrossViT and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/with_crossvit/val_loss_plot.png")

plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], swin_records["val_loss"], label="Swin Transformer")
plt.plot(cross_df["epoch"], cross_deit_df["test_loss"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Validation Loss of Swin Transformer and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/with_swin/val_loss_plot.png")


plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], cross_df["test_acc1"], label="CrossViT")
plt.plot(cross_deit_df["epoch"], cross_deit_df["test_acc1"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Accuracy (%)")
plt.title("Accuracy top-1 of CrossViT and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/with_crossvit/top1_accuracy_plot.png")


plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], swin_records["val_top-1-accuracy"], label="Swin Transformer")
plt.plot(cross_deit_df["epoch"], cross_deit_df["test_acc1"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Accuracy (%)")
plt.title("Accuracy top-1 of Swin Transformer and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/with_swin/top1_accuracy_plot.png")


plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], cross_df["train_loss"], label="CrossViT")
plt.plot(cross_df["epoch"], swin_records["loss"], label="Swin Transformer")
plt.plot(cross_deit_df["epoch"], cross_deit_df["train_loss"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Train Loss of CrossViT, Swin Transformer and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/all/train_loss_plot.png")


plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], cross_df["test_loss"], label="CrossViT")
plt.plot(cross_df["epoch"], swin_records["val_loss"], label="Swin Transformer")
plt.plot(cross_deit_df["epoch"], cross_deit_df["test_loss"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Validation Loss of CrossViT, Swin Transformer and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/all/val_loss_plot.png")


plt.figure(figsize=(15,10))
plt.plot(cross_df["epoch"], cross_df["test_acc1"], label="CrossViT")
plt.plot(cross_df["epoch"], swin_records["val_top-1-accuracy"], label="Swin Transformer")
plt.plot(cross_deit_df["epoch"], cross_deit_df["test_acc1"], label="CrossViT+DeiT")
plt.xlabel("Epoch")
plt.ylabel("Accuracy (%)")
plt.title("Accuracy top-1 of CrossViT, Swin Transformer and CrossViT+DeiT")
plt.legend()
plt.savefig("comparision/dataset2/all/top1_accuracy_plot.png")


